{"version":3,"sources":["components/Persons.js","components/Person.js","components/Filter.js","components/PersonForm.js","services/personas.js","components/notification.js","App.js","index.js"],"names":["Persons","personsToShow","displayNames","Person","name","number","Filter","newFilter","handleFilterChange","value","onChange","PersonForm","persons","addPerson","newName","handleNameChange","newPhone","handleNumberChange","setPersons","setNewName","setNewPhone","onSubmit","type","baseUrl","axios","get","then","response","data","personObject","post","Notification","message","className","App","useEffect","personsService","list","useState","setNewFilter","show","setShow","setMessage","filter","person","toUpperCase","startsWith","event","target","preventDefault","map","includes","window","alert","setTimeout","key","id","ReactDOM","render","document","getElementById"],"mappings":"mNAaiBA,EAXD,SAAC,GAAiC,EAAhCC,cAAiC,IAAlBC,EAAiB,EAAjBA,aAC7B,OACE,oCACE,4BACGA,OCEMC,EAJA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,OACb,4BAAKD,EAAL,IAAYC,ICIDC,EAPA,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,mBAAb,OACX,oCACE,kDACA,2BAAOC,MAAOF,EAAWG,SAAUF,MCqB1BG,EAxBI,SAAC,GACyB,EADvBC,QACwB,IADfC,EACc,EADdA,UAAWC,EACG,EADHA,QAASC,EACN,EADMA,iBAAkBC,EACxB,EADwBA,SAAUC,EAClC,EADkCA,mBAClC,EAAzCC,WAAyC,EAA7BC,WAA6B,EAAjBC,YAExB,OACA,oCACI,0BAAMC,SAAUR,GACZ,6BACI,qCACA,2BAAOJ,MAAOK,EAASJ,SAAUK,KAErC,6BACA,6BACI,uCACA,2BAAON,MAAOO,EAAUN,SAAUO,KAEtC,6BACA,6BACI,4BAAQK,KAAK,UAAb,W,gBClBVC,EAAU,oCAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCI9BG,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,yBAAKC,UAAU,SACVD,ICiGEE,EAlGH,WAGVC,qBAAY,WACVC,IACCV,MAAK,SAAAW,GAAI,OAAInB,EAAWmB,QAC1B,IANe,MAQeC,mBAAS,IARxB,mBAQR1B,EARQ,KAQCM,EARD,OASgBoB,mBAAS,gBATzB,mBASRxB,EATQ,KASCK,EATD,OAUiBmB,mBAAS,wBAV1B,mBAURtB,EAVQ,KAUEI,EAVF,OAWmBkB,mBAAS,0BAX5B,mBAWR/B,EAXQ,KAWGgC,EAXH,OAYSD,mBAAS,IAZlB,mBAYRE,EAZQ,KAYFC,EAZE,OAacH,mBAAS,MAbvB,mBAaTN,EAbS,KAaAU,EAbA,KAiBZzC,EAA0B,KAATuC,EACf5B,EACAA,EAAQ+B,QAAO,SAAAC,GAAM,OAAIA,EAAOxC,KAAKyC,cAAcC,WAAWN,EAAKK,kBA+DzE,OACE,6BACE,yCACA,kBAAC,EAAD,CAAQtC,UAAWA,EAAWC,mBATP,SAACuC,GAC1BR,EAAaQ,EAAMC,OAAOvC,OAC1BgC,EAAQM,EAAMC,OAAOvC,UAQnB,yCACA,kBAAC,EAAD,CAAcuB,QAASA,IACvB,kBAAC,EAAD,CAAYpB,QAASA,EAASC,UApDhB,SAACkC,GAEjB,GADAA,EAAME,iBACFnC,EACF,GAAMF,EAAQsC,KAAI,SAACN,GAAD,OAAYA,EAAOxC,QAAM+C,SAASrC,GAgBlDsC,OAAOC,MAAP,UAAgBvC,EAAhB,2CAhB2D,CAC3D,IAAMe,EAAe,CACnBzB,KAAMU,EACNT,OAAQW,GAEVoB,EAAsBP,GACrBH,MAAK,SAAAC,GACJT,EAAWS,MAEbe,EAAW,GAAD,OACLb,EAAazB,KADR,6BAGVkD,YAAW,WACTZ,EAAW,QACV,UAKLU,OAAOC,MAAP,sDAEAlC,EAAW,IACXC,EAAY,KA4BAN,QAASA,EAASC,iBAxBT,SAACgC,GACxB5B,EAAW4B,EAAMC,OAAOvC,QAwBVO,SAAUA,EAAUC,mBApBT,SAAC8B,GAC1B3B,EAAY2B,EAAMC,OAAOvC,QAoBXS,WAAYA,EAAYC,WAAYA,EAAYC,YAAaA,IACzE,uCACA,kBAAC,EAAD,CAASnB,cAAeA,EAAeC,aArEtB,kBAAMD,EAAciD,KAAI,SAAAN,GAC3C,OACA,kBAAC,EAAD,CACEW,IAAKX,EAAOY,GACZpD,KAAMwC,EAAOxC,KACbC,OAAQuC,EAAOvC,iB,MChCrBoD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c60bb6a0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({personsToShow, displayNames}) =>{\n    return (\n      <>\n        <ul>\n          {displayNames()}\n        </ul>    \n      </>\n    )\n  }\n  \n\n  export default Persons","import React from 'react'\n\n\n//this component displays a persons name and phone number\n  const Person = ({name, number}) =>(\n    <li>{name} {number}</li>\n  )\n\n  export default Person","import React from 'react'\n\nconst Filter = ({newFilter, handleFilterChange}) => (\n    <>\n      <p>filter names with: </p>\n      <input value={newFilter} onChange={handleFilterChange} />\n    </>\n  )\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ persons, addPerson, newName, handleNameChange, newPhone, handleNumberChange,\n    setPersons, setNewName, setNewPhone}) => {\n\n    return (\n    <>\n        <form onSubmit={addPerson}>\n            <div>\n                <p>name: </p>\n                <input value={newName} onChange={handleNameChange}/>  \n            </div>\n            <br />\n            <div>\n                <p>number: </p>\n                <input value={newPhone} onChange={handleNumberChange}/>\n            </div>\n            <br />\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    </>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n};\n\nconst create = personObject =>{\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = () =>{\n\n}\n\n\nexport default { \n    getAll: getAll, \n    create: create, \n    update: update \n  }\n","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === null ){\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useState, useEffect} from 'react';\nimport Persons from './components/Persons'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personsService from './services/personas'\nimport Notification from './components/notification'\n\nconst App = () => {\n\n\n  useEffect ( () => {\n    personsService.getAll()\n    .then(list => setPersons(list))\n}, [])\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('Enter a name')\n  const [ newPhone, setNewPhone] = useState('Enter a phone number')\n  const [ newFilter, setNewFilter] = useState('Enter a name to filter')\n  const [ show, setShow] = useState('')\n  const [message, setMessage] = useState(null)\n\n\n  //updates the elements in the personsToShow array every time the aplication render its content\n  var personsToShow = (show === '') \n      ? persons \n      : persons.filter(person => person.name.toUpperCase().startsWith(show.toUpperCase()));\n\n\n  \n  //guess wath this function does...\n  const displayNames = () => personsToShow.map(person => {   \n    return (\n    <Person \n      key={person.id}\n      name={person.name} \n      number={person.number}\n    /> )}\n  )\n  //this function adds a person with its phone number to the phonebook\n  //it validates that the persons name is not empty\n  //and that it hasn`t been already register\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (newName) {\n      if (! persons.map((person) => person.name).includes(newName)){\n        const personObject = {\n          name: newName,\n          number: newPhone\n        }                \n        personsService.create(personObject)\n        .then(response =>{ \n          setPersons(response)\n      })\n        setMessage(\n          `${personObject.name} was added to the server`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      }else {\n        window.alert(`${newName} already exists in your phonebook.`);\n      } \n    }else {\n      window.alert(`The name field must contain at least one character`);\n    }\n      setNewName('')    \n      setNewPhone('')\n      }\n\n  //this function refresh the name field with its content\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  //this function refresh the number field with its content\n  const handleNumberChange = (event) => {\n    setNewPhone(event.target.value);\n  }\n\n  //this function refresh the filter field and \n  //with each modification it modifies the show variable\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n    setShow(event.target.value);\n  }\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h3>add a new</h3>\n      <Notification message={message} />\n      <PersonForm persons={persons} addPerson={addPerson}\n                  newName={newName} handleNameChange={handleNameChange}\n                  newPhone={newPhone} handleNumberChange={handleNumberChange}\n                  setPersons={setPersons} setNewName={setNewName} setNewPhone={setNewPhone}/>\n      <h3>Numbers</h3>\n      <Persons personsToShow={personsToShow} displayNames={displayNames}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}